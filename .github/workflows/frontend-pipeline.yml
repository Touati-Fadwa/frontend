name: Frontend CI/CD Pipeline

on:
  push:
    branches: [main]
    paths:
      - 'src/**'
      - 'public/**'
      - 'package.json'
      - 'vite.config.ts'
  pull_request:
    branches: [main]
    paths:
      - 'src/**'
      - 'public/**'
      - 'package.json'
      - 'vite.config.ts'

jobs:
  ci-cd:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v3
        with:
          node-version: '18'
          cache: 'npm'

      - name: Install dependencies
        run: npm ci

      - name: Build frontend
        run: npm run build

      - name: Run unit tests
        run: npm test

      - name: SonarQube Analysis
        if: github.event_name == 'push' && github.ref == 'refs/heads/main'
        uses: SonarSource/sonarcloud-github-action@master
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}
        with:
          args: >
            -Dsonar.projectKey=bookworm-haven-library-system
            -Dsonar.organization=your-organization
            -Dsonar.sources=src
            -Dsonar.exclusions=**/*.test.tsx,**/*.test.ts,**/node_modules/**
            -Dsonar.javascript.lcov.reportPaths=coverage/lcov.info

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v2

      - name: Log in to Docker Hub
        uses: docker/login-action@v2
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_PASSWORD }}

      - name: Build and push Docker image
        uses: docker/build-push-action@v4
        with:
          context: .
          push: true
          tags: touatifadwa/bookworm-frontend:latest
          file: Dockerfile.frontend

      - name: Start Minikube
        if: github.event_name == 'push' && github.ref == 'refs/heads/main'
        uses: medyagh/setup-minikube@master

      - name: Deploy to Minikube
        if: github.event_name == 'push' && github.ref == 'refs/heads/main'
        run: |
          eval $(minikube docker-env)
          kubectl apply -f kubernetes/frontend-deployment.yml
          kubectl apply -f kubernetes/frontend-service.yml
          minikube service frontend-service --url
