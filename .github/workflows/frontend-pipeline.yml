name: CI/CD

on:
  push:
    branches: [ main ]
    paths:
      - 'src/**'
      - 'public/**'
      - 'package.json'
      - 'vite.config.ts'
  pull_request:
    branches: [ main ]
    paths:
      - 'src/**'
      - 'public/**'
      - 'package.json'
      - 'vite.config.ts'

jobs:
  build-and-test:
    name: Build and Test
    runs-on: ubuntu-latest
   
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
        with:
          fetch-depth: 0  # Important for SonarQube to analyze the full history
     
      - name: Setup Node.js
        uses: actions/setup-node@v3
        with:
          node-version: '18'
          cache: 'npm'
     
      - name: Install dependencies
        run: npm ci
     
      - name: Build
        run: npm run build
     
      - name: Run unit tests
        run: npm test
     
      - name: Upload build artifacts
        uses: actions/upload-artifact@v3
        with:
          name: frontend-build
          path: dist/
          retention-days: 1

  sonarqube-analysis:
    name: SonarQube Analysis
    needs: build-and-test
    runs-on: ubuntu-latest
   
    steps:
      - name: Checkout code
        uses: actions/checkout@v3
        with:
          fetch-depth: 0
     
      ##- name: SonarCloud Scan
        ##uses: SonarSource/sonarqube-scan-action@v5.0.0
        ##env:
         ## SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}
          ##GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        ##with:
          ##args: >
            ##-Dsonar.projectKey=Touati-Fadwa_frontend
            ##-Dsonar.organization=touati-fadwa
           ## -Dsonar.sources=src
            ##-Dsonar.exclusions=**/*.test.tsx,**/*.test.ts,**/node_modules/**
            ##-Dsonar.javascript.lcov.reportPaths=coverage/lcov.info
            ##-Dsonar.branch.name=main
  deploy:
    name: Deploy to Minikube
    needs: sonarqube-analysis
    runs-on: ubuntu-latest
    if: github.ref == 'refs/heads/main' && github.event_name == 'push'
   
    steps:
      - name: Checkout code
        uses: actions/checkout@v3
     
      - name: Download build artifacts
        uses: actions/download-artifact@v3
        with:
          name: frontend-build
          path: dist/
     
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v2

      - name: Build and push Docker image to Docker Hub
        uses: docker/build-push-action@v4
        with:
          context: .
          push: true
          tags: touatifadwa/bookworm-frontend:latest
          file: Dockerfile.frontend

      - name: Start Minikube
        uses: medyagh/setup-minikube@master
     
      - name: Deploy to Minikube
        run: |
          eval $(minikube docker-env)
          kubectl apply -f kubernetes/frontend-deployment.yml
          kubectl apply -f kubernetes/frontend-service.yml
          minikube service frontend-service --url

      























        
      

      